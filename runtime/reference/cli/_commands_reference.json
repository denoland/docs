{
  "name": "deno",
  "about": null,
  "args": [
    {
      "name": "quiet",
      "short": "q",
      "long": "quiet",
      "required": false,
      "help": "Suppress diagnostic output",
      "help_heading": null,
      "usage": "--quiet"
    }
  ],
  "subcommands": [
    {
      "name": "run",
      "about": "Run a JavaScript or TypeScript program, or a task or script.\n\nBy default all programs are run in sandbox without access to disk, network or ability to spawn subprocesses.\n  \u001b[38;5;245mdeno run https://examples.deno.land/hello-world.ts\u001b[39m\n\nGrant permission to read from disk and listen to network:\n  \u001b[38;5;245mdeno run --allow-read --allow-net jsr:@std/http/file-server\u001b[39m\n\nGrant permission to read allow-listed files from disk:\n  \u001b[38;5;245mdeno run --allow-read=/etc jsr:@std/http/file-server\u001b[39m\n\nGrant all permissions:\n  \u001b[38;5;245mdeno run -A jsr:@std/http/file-server\u001b[39m\n\nSpecifying the filename '-' to read the file from stdin.\n  \u001b[38;5;245mcurl https://examples.deno.land/hello-world.ts | deno run -\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/run\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "inspect",
          "short": null,
          "long": "inspect",
          "required": false,
          "help": "Activate inspector on host:port \u001b[38;5;245m[default: 127.0.0.1:9229]\u001b[39m",
          "help_heading": "Debugging options",
          "usage": "--inspect[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-brk",
          "short": null,
          "long": "inspect-brk",
          "required": false,
          "help": "Activate inspector on host:port, wait for debugger to connect and break at the start of user script",
          "help_heading": "Debugging options",
          "usage": "--inspect-brk[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-wait",
          "short": null,
          "long": "inspect-wait",
          "required": false,
          "help": "Activate inspector on host:port and wait for debugger to connect before running user code",
          "help_heading": "Debugging options",
          "usage": "--inspect-wait[=<HOST_AND_PORT>]"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Enable type-checking. This subcommand does not type-check by default\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "watch",
          "short": null,
          "long": "watch",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mLocal files from entry point module graph are watched by default.\n  Additional paths might be watched by passing them as arguments to this flag.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch[=<FILES>...]"
        },
        {
          "name": "hmr",
          "short": null,
          "long": "watch-hmr",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mLocal files from entry point module graph are watched by default.\n  Additional paths might be watched by passing them as arguments to this flag.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch-hmr[=<FILES>...]"
        },
        {
          "name": "watch-exclude",
          "short": null,
          "long": "watch-exclude",
          "required": false,
          "help": "Exclude provided files/patterns from watch mode",
          "help_heading": "File watching options",
          "usage": "--watch-exclude[=<FILES>...]"
        },
        {
          "name": "no-clear-screen",
          "short": null,
          "long": "no-clear-screen",
          "required": false,
          "help": "Do not clear terminal screen when under watch mode",
          "help_heading": "File watching options",
          "usage": "--no-clear-screen"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": null,
          "usage": "--ext <ext>"
        },
        {
          "name": "script_arg",
          "short": null,
          "long": null,
          "required": false,
          "help": "Script arg",
          "help_heading": null,
          "usage": "[SCRIPT_ARG]..."
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "no-code-cache",
          "short": null,
          "long": "no-code-cache",
          "required": false,
          "help": "Disable V8 code cache feature",
          "help_heading": null,
          "usage": "--no-code-cache"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno run\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[SCRIPT_ARG]...\u001b[0m"
    },
    {
      "name": "serve",
      "about": "Run a server defined in a main module\n\nThe serve command uses the default exports of the main module to determine which servers to start.\n\nStart a server defined in server.ts:\n  \u001b[38;5;245mdeno serve server.ts\u001b[39m\n\nStart a server defined in server.ts, watching for changes and running on port 5050:\n  \u001b[38;5;245mdeno serve --watch --port 5050 server.ts\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/serve\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "inspect",
          "short": null,
          "long": "inspect",
          "required": false,
          "help": "Activate inspector on host:port \u001b[38;5;245m[default: 127.0.0.1:9229]\u001b[39m",
          "help_heading": "Debugging options",
          "usage": "--inspect[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-brk",
          "short": null,
          "long": "inspect-brk",
          "required": false,
          "help": "Activate inspector on host:port, wait for debugger to connect and break at the start of user script",
          "help_heading": "Debugging options",
          "usage": "--inspect-brk[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-wait",
          "short": null,
          "long": "inspect-wait",
          "required": false,
          "help": "Activate inspector on host:port and wait for debugger to connect before running user code",
          "help_heading": "Debugging options",
          "usage": "--inspect-wait[=<HOST_AND_PORT>]"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "port",
          "short": null,
          "long": "port",
          "required": false,
          "help": "The TCP port to serve on. Pass 0 to pick a random free port \u001b[38;5;245m[default: 8000]\u001b[39m",
          "help_heading": null,
          "usage": "--port <port>"
        },
        {
          "name": "host",
          "short": null,
          "long": "host",
          "required": false,
          "help": "The TCP address to serve on, defaulting to 0.0.0.0 (all interfaces)",
          "help_heading": null,
          "usage": "--host <host>"
        },
        {
          "name": "parallel",
          "short": null,
          "long": "parallel",
          "required": false,
          "help": "Run multiple server workers in parallel. Parallelism defaults to the number of available CPUs or the value of the DENO_JOBS environment variable",
          "help_heading": null,
          "usage": "--parallel"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Enable type-checking. This subcommand does not type-check by default\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "watch",
          "short": null,
          "long": "watch",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mLocal files from entry point module graph are watched by default.\n  Additional paths might be watched by passing them as arguments to this flag.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch[=<FILES>...]"
        },
        {
          "name": "hmr",
          "short": null,
          "long": "watch-hmr",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mLocal files from entry point module graph are watched by default.\n  Additional paths might be watched by passing them as arguments to this flag.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch-hmr[=<FILES>...]"
        },
        {
          "name": "watch-exclude",
          "short": null,
          "long": "watch-exclude",
          "required": false,
          "help": "Exclude provided files/patterns from watch mode",
          "help_heading": "File watching options",
          "usage": "--watch-exclude[=<FILES>...]"
        },
        {
          "name": "no-clear-screen",
          "short": null,
          "long": "no-clear-screen",
          "required": false,
          "help": "Do not clear terminal screen when under watch mode",
          "help_heading": "File watching options",
          "usage": "--no-clear-screen"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": null,
          "usage": "--ext <ext>"
        },
        {
          "name": "script_arg",
          "short": null,
          "long": null,
          "required": false,
          "help": "Script arg",
          "help_heading": null,
          "usage": "[SCRIPT_ARG]..."
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "no-code-cache",
          "short": null,
          "long": "no-code-cache",
          "required": false,
          "help": "Disable V8 code cache feature",
          "help_heading": null,
          "usage": "--no-code-cache"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno serve\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[SCRIPT_ARG]...\u001b[0m"
    },
    {
      "name": "add",
      "about": "Add dependencies to your configuration file.\n  \u001b[38;5;245mdeno add jsr:@std/path\u001b[39m\n\nYou can add multiple dependencies at once:\n  \u001b[38;5;245mdeno add jsr:@std/path jsr:@std/assert\u001b[39m",
      "args": [
        {
          "name": "packages",
          "short": null,
          "long": null,
          "required": false,
          "help": "List of packages to add",
          "help_heading": null,
          "usage": "[packages]..."
        },
        {
          "name": "dev",
          "short": "D",
          "long": "dev",
          "required": false,
          "help": "Add as a dev dependency",
          "help_heading": null,
          "usage": "--dev"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno add\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[packages]...\u001b[0m"
    },
    {
      "name": "remove",
      "about": "Remove dependencies from the configuration file.\n  \u001b[38;5;245mdeno remove @std/path\u001b[39m\n\nYou can remove multiple dependencies at once:\n  \u001b[38;5;245mdeno remove @std/path @std/assert\u001b[39m\n",
      "args": [
        {
          "name": "packages",
          "short": null,
          "long": null,
          "required": false,
          "help": "List of packages to remove",
          "help_heading": null,
          "usage": "[packages]..."
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno remove\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[packages]...\u001b[0m"
    },
    {
      "name": "bench",
      "about": "Run benchmarks using Deno's built-in bench tool.\n\nEvaluate the given files, run all benches declared with 'Deno.bench()' and report results to standard output:\n  \u001b[38;5;245mdeno bench src/fetch_bench.ts src/signal_bench.ts\u001b[39m\n\nIf you specify a directory instead of a file, the path is expanded to all contained files matching the glob \u001b[36m{*_,*.,}bench.{js,mjs,ts,mts,jsx,tsx}\u001b[39m:\n  \u001b[38;5;245mdeno bench src/\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/bench\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Set type-checking behavior. This subcommand type-checks local modules by default, so adding --check is redundant\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "json",
          "short": null,
          "long": "json",
          "required": false,
          "help": "UNSTABLE: Output benchmark result in JSON format",
          "help_heading": null,
          "usage": "--json"
        },
        {
          "name": "ignore",
          "short": null,
          "long": "ignore",
          "required": false,
          "help": "Ignore files",
          "help_heading": null,
          "usage": "--ignore=<ignore>..."
        },
        {
          "name": "filter",
          "short": null,
          "long": "filter",
          "required": false,
          "help": "Run benchmarks with this string or regexp pattern in the bench name",
          "help_heading": null,
          "usage": "--filter <filter>"
        },
        {
          "name": "files",
          "short": null,
          "long": null,
          "required": false,
          "help": "List of file names to run",
          "help_heading": null,
          "usage": "[files]..."
        },
        {
          "name": "no-run",
          "short": null,
          "long": "no-run",
          "required": false,
          "help": "Cache bench modules, but don't run benchmarks",
          "help_heading": null,
          "usage": "--no-run"
        },
        {
          "name": "watch",
          "short": null,
          "long": "watch",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mOnly local files from entry point module graph are watched.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch"
        },
        {
          "name": "watch-exclude",
          "short": null,
          "long": "watch-exclude",
          "required": false,
          "help": "Exclude provided files/patterns from watch mode",
          "help_heading": "File watching options",
          "usage": "--watch-exclude[=<FILES>...]"
        },
        {
          "name": "no-clear-screen",
          "short": null,
          "long": "no-clear-screen",
          "required": false,
          "help": "Do not clear terminal screen when under watch mode",
          "help_heading": "File watching options",
          "usage": "--no-clear-screen"
        },
        {
          "name": "script_arg",
          "short": null,
          "long": null,
          "required": false,
          "help": "Script arg",
          "help_heading": null,
          "usage": "[SCRIPT_ARG]..."
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": null,
          "usage": "--ext <ext>"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno bench\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[files]...\u001b[0m \u001b[32m[--\u001b[0m \u001b[32m[SCRIPT_ARG]...\u001b[0m\u001b[32m]\u001b[0m"
    },
    {
      "name": "bundle",
      "about": "⚠️ `deno bundle` was removed in Deno 2.\n\nSee the Deno 1.x to 2.x Migration Guide for migration instructions: https://docs.deno.com/runtime/manual/advanced/migrate_deprecations",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno bundle\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "cache",
      "about": "Cache and compile remote dependencies.\n\nDownload and compile a module with all of its static dependencies and save them in the local cache, without running any code:\n  \u001b[38;5;245mdeno cache jsr:@std/http/file-server\u001b[39m\n\nFuture runs of this module will trigger no downloads or compilation unless --reload is specified\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/cache\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Enable type-checking. This subcommand does not type-check by default\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "file",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[file]..."
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "allow-import",
          "short": "I",
          "long": "allow-import",
          "required": false,
          "help": "Allow importing from remote hosts. Optionally specify allowed IP addresses and host names, with ports as necessary. Default value: \u001b[38;5;245mdeno.land:443,jsr.io:443,esm.sh:443,cdn.jsdelivr.net:443,raw.githubusercontent.com:443,user.githubusercontent.com:443\u001b[39m",
          "help_heading": null,
          "usage": "--allow-import[=<IP_OR_HOSTNAME>...]"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno cache\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[file]...\u001b[0m"
    },
    {
      "name": "check",
      "about": "Download and type-check without execution.\n\n  \u001b[38;5;245mdeno check jsr:@std/http/file-server\u001b[39m\n\nUnless --reload is specified, this command will not re-download already cached dependencies\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/check\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "all",
          "short": null,
          "long": "all",
          "required": false,
          "help": "Type-check all code, including remote modules and npm packages",
          "help_heading": null,
          "usage": "--all"
        },
        {
          "name": "doc",
          "short": null,
          "long": "doc",
          "required": false,
          "help": "Type-check code blocks in JSDoc as well as actual code",
          "help_heading": null,
          "usage": "--doc"
        },
        {
          "name": "doc-only",
          "short": null,
          "long": "doc-only",
          "required": false,
          "help": "Type-check code blocks in JSDoc and Markdown only",
          "help_heading": null,
          "usage": "--doc-only"
        },
        {
          "name": "file",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[file]..."
        },
        {
          "name": "allow-import",
          "short": "I",
          "long": "allow-import",
          "required": false,
          "help": "Allow importing from remote hosts. Optionally specify allowed IP addresses and host names, with ports as necessary. Default value: \u001b[38;5;245mdeno.land:443,jsr.io:443,esm.sh:443,cdn.jsdelivr.net:443,raw.githubusercontent.com:443,user.githubusercontent.com:443\u001b[39m",
          "help_heading": null,
          "usage": "--allow-import[=<IP_OR_HOSTNAME>...]"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno check\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[file]...\u001b[0m"
    },
    {
      "name": "clean",
      "about": "Remove the cache directory (\u001b[36m$DENO_DIR\u001b[39m)",
      "args": [],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno clean\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "compile",
      "about": "Compiles the given script into a self contained executable.\n\n  \u001b[38;5;245mdeno compile --allow-read --allow-net jsr:@std/http/file-server\u001b[39m\n  \u001b[38;5;245mdeno compile --output file_server jsr:@std/http/file-server\u001b[39m\n\nAny flags specified which affect runtime behavior will be applied to the resulting binary.\n\nThis allows distribution of a Deno application to systems that do not have Deno installed.\nUnder the hood, it bundles a slimmed down version of the Deno runtime along with your\nJavaScript or TypeScript code.\n\nCross-compiling to different target architectures is supported using the \u001b[36m--target\u001b[39m flag.\nOn the first invocation with deno will download the proper binary and cache it in \u001b[36m$DENO_DIR\u001b[39m.\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/compile\u001b[39m\n",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Set type-checking behavior. This subcommand type-checks local modules by default, so adding --check is redundant\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "include",
          "short": null,
          "long": "include",
          "required": false,
          "help": "Includes an additional module in the compiled executable's module graph.\n  \u001b[38;5;245mUse this flag if a dynamically imported module or a web worker main module\n  fails to load in the executable. This flag can be passed multiple times,\n  to include multiple additional modules.\u001b[39m",
          "help_heading": "Compile options",
          "usage": "--include <include>"
        },
        {
          "name": "output",
          "short": "o",
          "long": "output",
          "required": false,
          "help": "Output file \u001b[38;5;245m(defaults to $PWD/<inferred-name>)\u001b[39m",
          "help_heading": "Compile options",
          "usage": "--output <output>"
        },
        {
          "name": "target",
          "short": null,
          "long": "target",
          "required": false,
          "help": "Target OS architecture",
          "help_heading": "Compile options",
          "usage": "--target <target>"
        },
        {
          "name": "no-terminal",
          "short": null,
          "long": "no-terminal",
          "required": false,
          "help": "Hide terminal on Windows",
          "help_heading": "Compile options",
          "usage": "--no-terminal"
        },
        {
          "name": "icon",
          "short": null,
          "long": "icon",
          "required": false,
          "help": "Set the icon of the executable on Windows (.ico)",
          "help_heading": "Compile options",
          "usage": "--icon <icon>"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": null,
          "usage": "--ext <ext>"
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "script_arg",
          "short": null,
          "long": null,
          "required": false,
          "help": "Script arg",
          "help_heading": null,
          "usage": "[SCRIPT_ARG]..."
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno compile\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[SCRIPT_ARG]...\u001b[0m"
    },
    {
      "name": "completions",
      "about": "Output shell completion script to standard output.\n\n  \u001b[38;5;245mdeno completions bash > /usr/local/etc/bash_completion.d/deno.bash\u001b[39m\n  \u001b[38;5;245msource /usr/local/etc/bash_completion.d/deno.bash\u001b[39m",
      "args": [
        {
          "name": "shell",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[shell]"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno completions\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[shell]\u001b[0m"
    },
    {
      "name": "coverage",
      "about": "Print coverage reports from coverage profiles.\n\nCollect a coverage profile with deno test:\n  \u001b[38;5;245mdeno test --coverage=cov_profile\u001b[39m\n\nPrint a report to stdout:\n  \u001b[38;5;245mdeno coverage cov_profile\u001b[39m\n\nInclude urls that start with the file schema and exclude files ending with \u001b[36mtest.ts\u001b[39m and \u001b[36mtest.js\u001b[39m,\nfor an url to match it must match the include pattern and not match the exclude pattern:\n  \u001b[38;5;245mdeno coverage --include=\"^file:\" --exclude=\"test\\.(ts|js)\" cov_profile\u001b[39m\n\nWrite a report using the lcov format:\n  \u001b[38;5;245mdeno coverage --lcov --output=cov.lcov cov_profile/\u001b[39m\n\nGenerate html reports from lcov:\n  \u001b[38;5;245mgenhtml -o html_cov cov.lcov\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/coverage\u001b[39m",
      "args": [
        {
          "name": "ignore",
          "short": null,
          "long": "ignore",
          "required": false,
          "help": "Ignore coverage files",
          "help_heading": null,
          "usage": "--ignore=<ignore>..."
        },
        {
          "name": "include",
          "short": null,
          "long": "include",
          "required": false,
          "help": "Include source files in the report",
          "help_heading": null,
          "usage": "--include=<regex>..."
        },
        {
          "name": "exclude",
          "short": null,
          "long": "exclude",
          "required": false,
          "help": "Exclude source files from the report",
          "help_heading": null,
          "usage": "--exclude=<regex>..."
        },
        {
          "name": "lcov",
          "short": null,
          "long": "lcov",
          "required": false,
          "help": "Output coverage report in lcov format",
          "help_heading": null,
          "usage": "--lcov"
        },
        {
          "name": "output",
          "short": null,
          "long": "output",
          "required": false,
          "help": "Exports the coverage report in lcov format to the given file.\n  \u001b[38;5;245mIf no --output arg is specified then the report is written to stdout.\u001b[39m",
          "help_heading": null,
          "usage": "--output=<output>"
        },
        {
          "name": "html",
          "short": null,
          "long": "html",
          "required": false,
          "help": "Output coverage report in HTML format in the given directory",
          "help_heading": null,
          "usage": "--html"
        },
        {
          "name": "detailed",
          "short": null,
          "long": "detailed",
          "required": false,
          "help": "Output coverage report in detailed format in the terminal",
          "help_heading": null,
          "usage": "--detailed"
        },
        {
          "name": "files",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[files]..."
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno coverage\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[files]...\u001b[0m"
    },
    {
      "name": "doc",
      "about": "Show documentation for a module.\n\nOutput documentation to standard output:\n    \u001b[38;5;245mdeno doc ./path/to/module.ts\u001b[39m\n\nOutput documentation in HTML format:\n    \u001b[38;5;245mdeno doc --html --name=\"My library\" ./path/to/module.ts\u001b[39m\n\nLint a module for documentation diagnostics:\n    \u001b[38;5;245mdeno doc --lint ./path/to/module.ts\u001b[39m\n\nTarget a specific symbol:\n    \u001b[38;5;245mdeno doc ./path/to/module.ts MyClass.someField\u001b[39m\n\nShow documentation for runtime built-ins:\n    \u001b[38;5;245mdeno doc\u001b[39m\n    \u001b[38;5;245mdeno doc --filter Deno.Listener\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/doc\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "allow-import",
          "short": "I",
          "long": "allow-import",
          "required": false,
          "help": "Allow importing from remote hosts. Optionally specify allowed IP addresses and host names, with ports as necessary. Default value: \u001b[38;5;245mdeno.land:443,jsr.io:443,esm.sh:443,cdn.jsdelivr.net:443,raw.githubusercontent.com:443,user.githubusercontent.com:443\u001b[39m",
          "help_heading": null,
          "usage": "--allow-import[=<IP_OR_HOSTNAME>...]"
        },
        {
          "name": "json",
          "short": null,
          "long": "json",
          "required": false,
          "help": "Output documentation in JSON format",
          "help_heading": "Documentation options",
          "usage": "--json"
        },
        {
          "name": "html",
          "short": null,
          "long": "html",
          "required": false,
          "help": "Output documentation in HTML format",
          "help_heading": "Documentation options",
          "usage": "--html"
        },
        {
          "name": "name",
          "short": null,
          "long": "name",
          "required": false,
          "help": "The name that will be used in the docs (ie for breadcrumbs)",
          "help_heading": "Documentation options",
          "usage": "--name=<name>"
        },
        {
          "name": "category-docs",
          "short": null,
          "long": "category-docs",
          "required": false,
          "help": "Path to a JSON file keyed by category and an optional value of a markdown doc",
          "help_heading": "Documentation options",
          "usage": "--category-docs=<category-docs>"
        },
        {
          "name": "symbol-redirect-map",
          "short": null,
          "long": "symbol-redirect-map",
          "required": false,
          "help": "Path to a JSON file keyed by file, with an inner map of symbol to an external link",
          "help_heading": "Documentation options",
          "usage": "--symbol-redirect-map=<symbol-redirect-map>"
        },
        {
          "name": "strip-trailing-html",
          "short": null,
          "long": "strip-trailing-html",
          "required": false,
          "help": "Remove trailing .html from various links. Will still generate files with a .html extension",
          "help_heading": "Documentation options",
          "usage": "--strip-trailing-html"
        },
        {
          "name": "default-symbol-map",
          "short": null,
          "long": "default-symbol-map",
          "required": false,
          "help": "Uses the provided mapping of default name to wanted name for usage blocks",
          "help_heading": "Documentation options",
          "usage": "--default-symbol-map=<default-symbol-map>"
        },
        {
          "name": "output",
          "short": null,
          "long": "output",
          "required": false,
          "help": "Directory for HTML documentation output",
          "help_heading": "Documentation options",
          "usage": "--output=<output>"
        },
        {
          "name": "private",
          "short": null,
          "long": "private",
          "required": false,
          "help": "Output private documentation",
          "help_heading": "Documentation options",
          "usage": "--private"
        },
        {
          "name": "filter",
          "short": null,
          "long": "filter",
          "required": false,
          "help": "Dot separated path to symbol",
          "help_heading": "Documentation options",
          "usage": "--filter <filter>"
        },
        {
          "name": "lint",
          "short": null,
          "long": "lint",
          "required": false,
          "help": "Output documentation diagnostics.",
          "help_heading": "Documentation options",
          "usage": "--lint"
        },
        {
          "name": "source_file",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[source_file]..."
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno doc\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[source_file]...\u001b[0m"
    },
    {
      "name": "eval",
      "about": "Evaluate JavaScript from the command line.\n  \u001b[38;5;245mdeno eval \"console.log('hello world')\"\u001b[39m\n\nTo evaluate as TypeScript:\n  \u001b[38;5;245mdeno eval --ext=ts \"const v: string = 'hello'; console.log(v)\"\u001b[39m\n\nThis command has implicit access to all permissions.\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/eval\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "inspect",
          "short": null,
          "long": "inspect",
          "required": false,
          "help": "Activate inspector on host:port \u001b[38;5;245m[default: 127.0.0.1:9229]\u001b[39m",
          "help_heading": "Debugging options",
          "usage": "--inspect[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-brk",
          "short": null,
          "long": "inspect-brk",
          "required": false,
          "help": "Activate inspector on host:port, wait for debugger to connect and break at the start of user script",
          "help_heading": "Debugging options",
          "usage": "--inspect-brk[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-wait",
          "short": null,
          "long": "inspect-wait",
          "required": false,
          "help": "Activate inspector on host:port and wait for debugger to connect before running user code",
          "help_heading": "Debugging options",
          "usage": "--inspect-wait[=<HOST_AND_PORT>]"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Enable type-checking. This subcommand does not type-check by default\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": null,
          "usage": "--ext <ext>"
        },
        {
          "name": "print",
          "short": "p",
          "long": "print",
          "required": false,
          "help": "print result to stdout",
          "help_heading": null,
          "usage": "--print"
        },
        {
          "name": "code_arg",
          "short": null,
          "long": null,
          "required": false,
          "help": "Code to evaluate",
          "help_heading": null,
          "usage": "[CODE_ARG]..."
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno eval\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[CODE_ARG]...\u001b[0m"
    },
    {
      "name": "fmt",
      "about": "Auto-format various file types.\n  \u001b[38;5;245mdeno fmt myfile1.ts myfile2.ts\u001b[39m\n\nSupported file types are:\n  \u001b[38;5;245mJavaScript, TypeScript, Markdown, JSON(C) and Jupyter Notebooks\u001b[39m\n\nSupported file types which are behind corresponding unstable flags (see formatting options):\n  \u001b[38;5;245mHTML, CSS, SCSS, SASS, LESS, YAML, Svelte, Vue, Astro and Angular\u001b[39m\n\nFormat stdin and write to stdout:\n  \u001b[38;5;245mcat file.ts | deno fmt -\u001b[39m\n\nCheck if the files are formatted:\n  \u001b[38;5;245mdeno fmt --check\u001b[39m\n\nIgnore formatting code by preceding it with an ignore comment:\n  \u001b[38;5;245m// deno-fmt-ignore\u001b[39m\n\nIgnore formatting a file by adding an ignore comment at the top of the file:\n  \u001b[38;5;245m// deno-fmt-ignore-file\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/fmt\u001b[39m",
      "args": [
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Check if the source files are formatted",
          "help_heading": "Formatting options",
          "usage": "--check"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": "Formatting options",
          "usage": "--ext <ext>"
        },
        {
          "name": "ignore",
          "short": null,
          "long": "ignore",
          "required": false,
          "help": "Ignore formatting particular source files",
          "help_heading": "Formatting options",
          "usage": "--ignore=<ignore>..."
        },
        {
          "name": "files",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[files]..."
        },
        {
          "name": "watch",
          "short": null,
          "long": "watch",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mOnly local files from entry point module graph are watched.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch"
        },
        {
          "name": "watch-exclude",
          "short": null,
          "long": "watch-exclude",
          "required": false,
          "help": "Exclude provided files/patterns from watch mode",
          "help_heading": "File watching options",
          "usage": "--watch-exclude[=<FILES>...]"
        },
        {
          "name": "no-clear-screen",
          "short": null,
          "long": "no-clear-screen",
          "required": false,
          "help": "Do not clear terminal screen when under watch mode",
          "help_heading": "File watching options",
          "usage": "--no-clear-screen"
        },
        {
          "name": "use-tabs",
          "short": null,
          "long": "use-tabs",
          "required": false,
          "help": "Use tabs instead of spaces for indentation \u001b[38;5;245m[default: false]\u001b[39m",
          "help_heading": "Formatting options",
          "usage": "--use-tabs[=<use-tabs>]"
        },
        {
          "name": "line-width",
          "short": null,
          "long": "line-width",
          "required": false,
          "help": "Define maximum line width \u001b[38;5;245m[default: 80]\u001b[39m",
          "help_heading": "Formatting options",
          "usage": "--line-width <line-width>"
        },
        {
          "name": "indent-width",
          "short": null,
          "long": "indent-width",
          "required": false,
          "help": "Define indentation width \u001b[38;5;245m[default: 2]\u001b[39m",
          "help_heading": "Formatting options",
          "usage": "--indent-width <indent-width>"
        },
        {
          "name": "single-quote",
          "short": null,
          "long": "single-quote",
          "required": false,
          "help": "Use single quotes \u001b[38;5;245m[default: false]\u001b[39m",
          "help_heading": "Formatting options",
          "usage": "--single-quote[=<single-quote>]"
        },
        {
          "name": "prose-wrap",
          "short": null,
          "long": "prose-wrap",
          "required": false,
          "help": "Define how prose should be wrapped \u001b[38;5;245m[default: always]\u001b[39m",
          "help_heading": "Formatting options",
          "usage": "--prose-wrap <prose-wrap>"
        },
        {
          "name": "no-semicolons",
          "short": null,
          "long": "no-semicolons",
          "required": false,
          "help": "Don't use semicolons except where necessary \u001b[38;5;245m[default: false]\u001b[39m",
          "help_heading": "Formatting options",
          "usage": "--no-semicolons[=<no-semicolons>]"
        },
        {
          "name": "unstable-component",
          "short": null,
          "long": "unstable-component",
          "required": false,
          "help": "Enable formatting Svelte, Vue, Astro and Angular files",
          "help_heading": "Formatting options",
          "usage": "--unstable-component"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno fmt\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[files]...\u001b[0m"
    },
    {
      "name": "init",
      "about": "scaffolds a basic Deno project with a script, test, and configuration file",
      "args": [
        {
          "name": "dir",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[dir]"
        },
        {
          "name": "lib",
          "short": null,
          "long": "lib",
          "required": false,
          "help": "Generate an example library project",
          "help_heading": null,
          "usage": "--lib"
        },
        {
          "name": "serve",
          "short": null,
          "long": "serve",
          "required": false,
          "help": "Generate an example project for `deno serve`",
          "help_heading": null,
          "usage": "--serve"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno init\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[dir]\u001b[0m"
    },
    {
      "name": "info",
      "about": "Show information about a module or the cache directories.\n\nGet information about a module:\n  \u001b[38;5;245mdeno info jsr:@std/http/file-server\u001b[39m\n\nThe following information is shown:\n  local: Local path of the file\n  type: JavaScript, TypeScript, or JSON\n  emit: Local path of compiled source code (TypeScript only)\n  dependencies: Dependency tree of the source file\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/info\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "allow-import",
          "short": "I",
          "long": "allow-import",
          "required": false,
          "help": "Allow importing from remote hosts. Optionally specify allowed IP addresses and host names, with ports as necessary. Default value: \u001b[38;5;245mdeno.land:443,jsr.io:443,esm.sh:443,cdn.jsdelivr.net:443,raw.githubusercontent.com:443,user.githubusercontent.com:443\u001b[39m",
          "help_heading": null,
          "usage": "--allow-import[=<IP_OR_HOSTNAME>...]"
        },
        {
          "name": "file",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[file]"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Show files used for origin bound APIs like the Web Storage API when running a script with \u001b[36m--location=<HREF>\u001b[39m",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "json",
          "short": null,
          "long": "json",
          "required": false,
          "help": "UNSTABLE: Outputs the information in JSON format",
          "help_heading": null,
          "usage": "--json"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno info\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[file]\u001b[0m"
    },
    {
      "name": "install",
      "about": "Installs dependencies either in the local project or globally to a bin directory.\n\n\u001b[32mLocal installation\u001b[39m\n\nAdd dependencies to the local project's configuration (\u001b[38;5;245mdeno.json / package.json\u001b[39m) and installs them\nin the package cache. If no dependency is specified, installs all dependencies listed in the config file.\nIf the \u001b[38;5;245m--entrypoint\u001b[39m flag is passed, installs the dependencies of the specified entrypoint(s).\n\n  \u001b[38;5;245mdeno install\u001b[39m\n  \u001b[38;5;245mdeno install jsr:@std/bytes\u001b[39m\n  \u001b[38;5;245mdeno install npm:chalk\u001b[39m\n  \u001b[38;5;245mdeno install --entrypoint entry1.ts entry2.ts\u001b[39m\n\n\u001b[32mGlobal installation\u001b[39m\n\nIf the \u001b[1m--global\u001b[22m flag is set, installs a script as an executable in the installation root's bin directory.\n\n  \u001b[38;5;245mdeno install --global --allow-net --allow-read jsr:@std/http/file-server\u001b[39m\n  \u001b[38;5;245mdeno install -g https://examples.deno.land/color-logging.ts\u001b[39m\n\nTo change the executable name, use \u001b[36m-n\u001b[39m/\u001b[36m--name\u001b[39m:\n  \u001b[38;5;245mdeno install -g --allow-net --allow-read -n serve jsr:@std/http/file-server\u001b[39m\n\nThe executable name is inferred by default:\n  - Attempt to take the file stem of the URL path. The above example would\n    become \u001b[38;5;245mfile_server\u001b[39m.\n  - If the file stem is something generic like \u001b[38;5;245mmain\u001b[39m, \u001b[38;5;245mmod\u001b[39m, \u001b[38;5;245mindex\u001b[39m or \u001b[38;5;245mcli\u001b[39m,\n    and the path has no parent, take the file name of the parent path. Otherwise\n    settle with the generic name.\n  - If the resulting name has an \u001b[38;5;245m@...\u001b[39m suffix, strip it.\n\nTo change the installation root, use \u001b[36m--root\u001b[39m:\n  \u001b[38;5;245mdeno install -g --allow-net --allow-read --root /usr/local jsr:@std/http/file-server\u001b[39m\n\nThe installation root is determined, in order of precedence:\n  - \u001b[38;5;245m--root\u001b[39m option\n  - \u001b[38;5;245mDENO_INSTALL_ROOT\u001b[39m environment variable\n  - \u001b[38;5;245m$HOME/.deno\u001b[39m\n\nThese must be added to the path manually if required.",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "inspect",
          "short": null,
          "long": "inspect",
          "required": false,
          "help": "Activate inspector on host:port \u001b[38;5;245m[default: 127.0.0.1:9229]\u001b[39m",
          "help_heading": "Debugging options",
          "usage": "--inspect[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-brk",
          "short": null,
          "long": "inspect-brk",
          "required": false,
          "help": "Activate inspector on host:port, wait for debugger to connect and break at the start of user script",
          "help_heading": "Debugging options",
          "usage": "--inspect-brk[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-wait",
          "short": null,
          "long": "inspect-wait",
          "required": false,
          "help": "Activate inspector on host:port and wait for debugger to connect before running user code",
          "help_heading": "Debugging options",
          "usage": "--inspect-wait[=<HOST_AND_PORT>]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Set type-checking behavior. This subcommand type-checks local modules by default, so adding --check is redundant\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "cmd",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[cmd]..."
        },
        {
          "name": "name",
          "short": "n",
          "long": "name",
          "required": false,
          "help": "Executable file name",
          "help_heading": null,
          "usage": "--name <name>"
        },
        {
          "name": "root",
          "short": null,
          "long": "root",
          "required": false,
          "help": "Installation root",
          "help_heading": null,
          "usage": "--root <root>"
        },
        {
          "name": "force",
          "short": "f",
          "long": "force",
          "required": false,
          "help": "Forcefully overwrite existing installation",
          "help_heading": null,
          "usage": "--force"
        },
        {
          "name": "global",
          "short": "g",
          "long": "global",
          "required": false,
          "help": "Install a package or script as a globally available executable",
          "help_heading": null,
          "usage": "--global"
        },
        {
          "name": "entrypoint",
          "short": "e",
          "long": "entrypoint",
          "required": false,
          "help": "Install dependents of the specified entrypoint(s)",
          "help_heading": null,
          "usage": "--entrypoint"
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "dev",
          "short": "D",
          "long": "dev",
          "required": false,
          "help": "Add as a dev dependency",
          "help_heading": null,
          "usage": "--dev"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno install\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[cmd]...\u001b[0m"
    },
    {
      "name": "json_reference",
      "about": null,
      "args": [],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno json_reference\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "jupyter",
      "about": "Deno kernel for Jupyter notebooks",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "install",
          "short": null,
          "long": "install",
          "required": false,
          "help": "Installs kernelspec, requires 'jupyter' command to be available.",
          "help_heading": null,
          "usage": "--install"
        },
        {
          "name": "kernel",
          "short": null,
          "long": "kernel",
          "required": false,
          "help": "Start the kernel",
          "help_heading": null,
          "usage": "--kernel"
        },
        {
          "name": "conn",
          "short": null,
          "long": "conn",
          "required": false,
          "help": "Path to JSON file describing connection parameters, provided by Jupyter",
          "help_heading": null,
          "usage": "--conn <conn>"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno jupyter\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "uninstall",
      "about": "Uninstalls a dependency or an executable script in the installation root's bin directory.\n  \u001b[38;5;245mdeno uninstall @std/dotenv chalk\u001b[39m\n  \u001b[38;5;245mdeno uninstall --global file_server\u001b[39m\n\nTo change the installation root, use \u001b[36m--root\u001b[39m flag:\n  \u001b[38;5;245mdeno uninstall --global --root /usr/local serve\u001b[39m\n\nThe installation root is determined, in order of precedence:\n  - \u001b[38;5;245m--root\u001b[39m option\n  - \u001b[38;5;245mDENO_INSTALL_ROOT\u001b[39m environment variable\n  - \u001b[38;5;245m$HOME/.deno\u001b[39m",
      "args": [
        {
          "name": "name-or-package",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[name-or-package]"
        },
        {
          "name": "root",
          "short": null,
          "long": "root",
          "required": false,
          "help": "Installation root",
          "help_heading": null,
          "usage": "--root <root>"
        },
        {
          "name": "global",
          "short": "g",
          "long": "global",
          "required": false,
          "help": "Remove globally installed package or module",
          "help_heading": null,
          "usage": "--global"
        },
        {
          "name": "additional-packages",
          "short": null,
          "long": null,
          "required": false,
          "help": "List of additional packages to remove",
          "help_heading": null,
          "usage": "[additional-packages]..."
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno uninstall\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[name-or-package]\u001b[0m \u001b[32m[additional-packages]...\u001b[0m"
    },
    {
      "name": "lsp",
      "about": "The 'deno lsp' subcommand provides a way for code editors and IDEs to interact with Deno\nusing the Language Server Protocol. Usually humans do not use this subcommand directly.\nFor example, 'deno lsp' can provide IDEs with go-to-definition support and automatic code formatting.\n\nHow to connect various editors and IDEs to 'deno lsp': https://docs.deno.com/go/lsp",
      "args": [],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno lsp\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "lint",
      "about": "Lint JavaScript/TypeScript source code.\n\n  \u001b[38;5;245mdeno lint\u001b[39m\n  \u001b[38;5;245mdeno lint myfile1.ts myfile2.js\u001b[39m\n\nPrint result as JSON:\n  \u001b[38;5;245mdeno lint --json\u001b[39m\n\nRead from stdin:\n  \u001b[38;5;245mcat file.ts | deno lint -\u001b[39m\n  \u001b[38;5;245mcat file.ts | deno lint --json -\u001b[39m\n\nList available rules:\n  \u001b[38;5;245mdeno lint --rules\u001b[39m\n\nTo ignore specific diagnostics, you can write an ignore comment on the preceding line with a rule name (or multiple):\n  \u001b[38;5;245m// deno-lint-ignore no-explicit-any\u001b[39m\n  \u001b[38;5;245m// deno-lint-ignore require-await no-empty\u001b[39m\n\nTo ignore linting on an entire file, you can add an ignore comment at the top of the file:\n  \u001b[38;5;245m// deno-lint-ignore-file\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/lint\u001b[39m\n",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "fix",
          "short": null,
          "long": "fix",
          "required": false,
          "help": "Fix any linting errors for rules that support it",
          "help_heading": "Linting options",
          "usage": "--fix"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Specify the file extension to lint when reading from stdin.For example, use `jsx` to lint JSX files or `tsx` for TSX files.This argument is necessary because stdin input does not automatically infer the file type.Example usage: `cat file.jsx | deno lint - --ext=jsx`.",
          "help_heading": null,
          "usage": "--ext=<EXT>"
        },
        {
          "name": "rules",
          "short": null,
          "long": "rules",
          "required": false,
          "help": "List available rules",
          "help_heading": "Linting options",
          "usage": "--rules"
        },
        {
          "name": "rules-tags",
          "short": null,
          "long": "rules-tags",
          "required": false,
          "help": "Use set of rules with a tag",
          "help_heading": "Linting options",
          "usage": "--rules-tags=<rules-tags>..."
        },
        {
          "name": "rules-include",
          "short": null,
          "long": "rules-include",
          "required": false,
          "help": "Include lint rules",
          "help_heading": "Linting options",
          "usage": "--rules-include=<rules-include>..."
        },
        {
          "name": "rules-exclude",
          "short": null,
          "long": "rules-exclude",
          "required": false,
          "help": "Exclude lint rules",
          "help_heading": "Linting options",
          "usage": "--rules-exclude=<rules-exclude>..."
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "ignore",
          "short": null,
          "long": "ignore",
          "required": false,
          "help": "Ignore linting particular source files",
          "help_heading": "Linting options",
          "usage": "--ignore=<ignore>..."
        },
        {
          "name": "json",
          "short": null,
          "long": "json",
          "required": false,
          "help": "Output lint result in JSON format",
          "help_heading": "Linting options",
          "usage": "--json"
        },
        {
          "name": "compact",
          "short": null,
          "long": "compact",
          "required": false,
          "help": "Output lint result in compact format",
          "help_heading": "Linting options",
          "usage": "--compact"
        },
        {
          "name": "files",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[files]..."
        },
        {
          "name": "watch",
          "short": null,
          "long": "watch",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mOnly local files from entry point module graph are watched.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch"
        },
        {
          "name": "watch-exclude",
          "short": null,
          "long": "watch-exclude",
          "required": false,
          "help": "Exclude provided files/patterns from watch mode",
          "help_heading": "File watching options",
          "usage": "--watch-exclude[=<FILES>...]"
        },
        {
          "name": "no-clear-screen",
          "short": null,
          "long": "no-clear-screen",
          "required": false,
          "help": "Do not clear terminal screen when under watch mode",
          "help_heading": "File watching options",
          "usage": "--no-clear-screen"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno lint\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[files]...\u001b[0m"
    },
    {
      "name": "publish",
      "about": "Publish the current working directory's package or workspace to JSR",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "token",
          "short": null,
          "long": "token",
          "required": false,
          "help": "The API token to use when publishing. If unset, interactive authentication is be used",
          "help_heading": "Publishing options",
          "usage": "--token <token>"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "dry-run",
          "short": null,
          "long": "dry-run",
          "required": false,
          "help": "Prepare the package for publishing performing all checks and validations without uploading",
          "help_heading": "Publishing options",
          "usage": "--dry-run"
        },
        {
          "name": "allow-slow-types",
          "short": null,
          "long": "allow-slow-types",
          "required": false,
          "help": "Allow publishing with slow types",
          "help_heading": "Publishing options",
          "usage": "--allow-slow-types"
        },
        {
          "name": "allow-dirty",
          "short": null,
          "long": "allow-dirty",
          "required": false,
          "help": "Allow publishing if the repository has uncommitted changed",
          "help_heading": "Publishing options",
          "usage": "--allow-dirty"
        },
        {
          "name": "no-provenance",
          "short": null,
          "long": "no-provenance",
          "required": false,
          "help": "Disable provenance attestation.\n  \u001b[38;5;245mEnabled by default on Github actions, publicly links the package to where it was built and published from.\u001b[39m",
          "help_heading": "Publishing options",
          "usage": "--no-provenance"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Set type-checking behavior. This subcommand type-checks local modules by default, so adding --check is redundant\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno publish\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "repl",
      "about": "Starts a read-eval-print-loop, which lets you interactively build up program state in the global context.\nIt is especially useful for quick prototyping and checking snippets of code.\n\nTypeScript is supported, however it is not type-checked, only transpiled.",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "args",
          "short": null,
          "long": null,
          "required": false,
          "help": null,
          "help_heading": null,
          "usage": "[ARGS]..."
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "inspect",
          "short": null,
          "long": "inspect",
          "required": false,
          "help": "Activate inspector on host:port \u001b[38;5;245m[default: 127.0.0.1:9229]\u001b[39m",
          "help_heading": "Debugging options",
          "usage": "--inspect[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-brk",
          "short": null,
          "long": "inspect-brk",
          "required": false,
          "help": "Activate inspector on host:port, wait for debugger to connect and break at the start of user script",
          "help_heading": "Debugging options",
          "usage": "--inspect-brk[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-wait",
          "short": null,
          "long": "inspect-wait",
          "required": false,
          "help": "Activate inspector on host:port and wait for debugger to connect before running user code",
          "help_heading": "Debugging options",
          "usage": "--inspect-wait[=<HOST_AND_PORT>]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "eval-file",
          "short": null,
          "long": "eval-file",
          "required": false,
          "help": "Evaluates the provided file(s) as scripts when the REPL starts. Accepts file paths and URLs",
          "help_heading": null,
          "usage": "--eval-file=<eval-file>..."
        },
        {
          "name": "eval",
          "short": null,
          "long": "eval",
          "required": false,
          "help": "Evaluates the provided code when the REPL starts",
          "help_heading": null,
          "usage": "--eval <code>"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno repl\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[--\u001b[0m \u001b[32m[ARGS]...\u001b[0m\u001b[32m]\u001b[0m"
    },
    {
      "name": "task",
      "about": "Run a task defined in the configuration file.\n  \u001b[38;5;245mdeno task build\u001b[39m\n\nList all available tasks:\n  \u001b[38;5;245mdeno task\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "cwd",
          "short": null,
          "long": "cwd",
          "required": false,
          "help": "Specify the directory to run the task in",
          "help_heading": null,
          "usage": "--cwd <DIR>"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno task\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[TASK]\u001b[0m"
    },
    {
      "name": "test",
      "about": "Run tests using Deno's built-in test runner.\n\nEvaluate the given modules, run all tests declared with \u001b[1mDeno.\u001b[33m\u001b[22mtest()\u001b[39m and report results to standard output:\n  \u001b[38;5;245mdeno test src/fetch_test.ts src/signal_test.ts\u001b[39m\n\nDirectory arguments are expanded to all contained files matching the glob \u001b[36m{*_,*.,}test.{js,mjs,ts,mts,jsx,tsx}\u001b[39m\nor \u001b[36m**/__tests__/**\u001b[39m:\n \u001b[38;5;245mdeno test src/\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/test\u001b[39m",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable-broadcast-channel",
          "short": null,
          "long": "unstable-broadcast-channel",
          "required": false,
          "help": "Enable unstable `BroadcastChannel` API",
          "help_heading": "Unstable options",
          "usage": "--unstable-broadcast-channel"
        },
        {
          "name": "unstable-cron",
          "short": null,
          "long": "unstable-cron",
          "required": false,
          "help": "Enable unstable Deno.cron API",
          "help_heading": "Unstable options",
          "usage": "--unstable-cron"
        },
        {
          "name": "unstable-kv",
          "short": null,
          "long": "unstable-kv",
          "required": false,
          "help": "Enable unstable Key-Value store APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-kv"
        },
        {
          "name": "unstable-net",
          "short": null,
          "long": "unstable-net",
          "required": false,
          "help": "Enable unstable net APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-net"
        },
        {
          "name": "unstable-temporal",
          "short": null,
          "long": "unstable-temporal",
          "required": false,
          "help": "Enable unstable Temporal API",
          "help_heading": "Unstable options",
          "usage": "--unstable-temporal"
        },
        {
          "name": "unstable-unsafe-proto",
          "short": null,
          "long": "unstable-unsafe-proto",
          "required": false,
          "help": "Enable unsafe __proto__ support. This is a security risk.",
          "help_heading": "Unstable options",
          "usage": "--unstable-unsafe-proto"
        },
        {
          "name": "unstable-webgpu",
          "short": null,
          "long": "unstable-webgpu",
          "required": false,
          "help": "Enable unstable `WebGPU` APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-webgpu"
        },
        {
          "name": "unstable-worker-options",
          "short": null,
          "long": "unstable-worker-options",
          "required": false,
          "help": "Enable unstable Web Worker APIs",
          "help_heading": "Unstable options",
          "usage": "--unstable-worker-options"
        },
        {
          "name": "no-check",
          "short": null,
          "long": "no-check",
          "required": false,
          "help": "Skip type-checking. If the value of \"remote\" is supplied, diagnostic errors from remote modules will be ignored",
          "help_heading": "Type checking options",
          "usage": "--no-check[=<NO_CHECK_TYPE>]"
        },
        {
          "name": "import-map",
          "short": null,
          "long": "import-map",
          "required": false,
          "help": "Load import map file from local file or remote URL\n  \u001b[38;5;245mDocs: https://docs.deno.com/runtime/manual/basics/import_maps\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--import-map <FILE>"
        },
        {
          "name": "no-remote",
          "short": null,
          "long": "no-remote",
          "required": false,
          "help": "Do not resolve remote modules",
          "help_heading": "Dependency management options",
          "usage": "--no-remote"
        },
        {
          "name": "no-npm",
          "short": null,
          "long": "no-npm",
          "required": false,
          "help": "Do not resolve npm modules",
          "help_heading": "Dependency management options",
          "usage": "--no-npm"
        },
        {
          "name": "node-modules-dir",
          "short": null,
          "long": "node-modules-dir",
          "required": false,
          "help": "Sets the node modules management mode for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--node-modules-dir[=<MODE>]"
        },
        {
          "name": "vendor",
          "short": null,
          "long": "vendor",
          "required": false,
          "help": "Toggles local vendor folder usage for remote modules and a node_modules folder for npm packages",
          "help_heading": "Dependency management options",
          "usage": "--vendor[=<vendor>]"
        },
        {
          "name": "config",
          "short": "c",
          "long": "config",
          "required": false,
          "help": "Configure different aspects of deno including TypeScript, linting, and code formatting\n  \u001b[38;5;245mTypically the configuration file will be called `deno.json` or `deno.jsonc` and\n  automatically detected; in that case this flag is not necessary.\n  Docs: https://docs.deno.com/go/config\u001b[39m",
          "help_heading": null,
          "usage": "--config <FILE>"
        },
        {
          "name": "no-config",
          "short": null,
          "long": "no-config",
          "required": false,
          "help": "Disable automatic loading of the configuration file",
          "help_heading": null,
          "usage": "--no-config"
        },
        {
          "name": "reload",
          "short": "r",
          "long": "reload",
          "required": false,
          "help": "Reload source code cache (recompile TypeScript)\n  \u001b[38;5;245mno value                                                 Reload everything\n  jsr:@std/http/file-server,jsr:@std/assert/assert-equals  Reloads specific modules\n  npm:                                                     Reload all npm modules\n  npm:chalk                                                Reload specific npm module\u001b[39m",
          "help_heading": "Dependency management options",
          "usage": "--reload[=<CACHE_BLOCKLIST>...]"
        },
        {
          "name": "lock",
          "short": null,
          "long": "lock",
          "required": false,
          "help": "Check the specified lock file. (If value is not provided, defaults to \"./deno.lock\")",
          "help_heading": "Dependency management options",
          "usage": "--lock [<FILE>]"
        },
        {
          "name": "no-lock",
          "short": null,
          "long": "no-lock",
          "required": false,
          "help": "Disable auto discovery of the lock file",
          "help_heading": "Dependency management options",
          "usage": "--no-lock"
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        },
        {
          "name": "inspect",
          "short": null,
          "long": "inspect",
          "required": false,
          "help": "Activate inspector on host:port \u001b[38;5;245m[default: 127.0.0.1:9229]\u001b[39m",
          "help_heading": "Debugging options",
          "usage": "--inspect[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-brk",
          "short": null,
          "long": "inspect-brk",
          "required": false,
          "help": "Activate inspector on host:port, wait for debugger to connect and break at the start of user script",
          "help_heading": "Debugging options",
          "usage": "--inspect-brk[=<HOST_AND_PORT>]"
        },
        {
          "name": "inspect-wait",
          "short": null,
          "long": "inspect-wait",
          "required": false,
          "help": "Activate inspector on host:port and wait for debugger to connect before running user code",
          "help_heading": "Debugging options",
          "usage": "--inspect-wait[=<HOST_AND_PORT>]"
        },
        {
          "name": "allow-scripts",
          "short": null,
          "long": "allow-scripts",
          "required": false,
          "help": "Allow running npm lifecycle scripts for the given packages\n  \u001b[38;5;245mNote: Scripts will only be executed when using a node_modules directory (`--node-modules-dir`)\u001b[39m",
          "help_heading": null,
          "usage": "--allow-scripts[=<PACKAGE>...]"
        },
        {
          "name": "frozen",
          "short": null,
          "long": "frozen",
          "required": false,
          "help": "Error out if lockfile is out of date",
          "help_heading": "Dependency management options",
          "usage": "--frozen[=<BOOLEAN>]"
        },
        {
          "name": "cached-only",
          "short": null,
          "long": "cached-only",
          "required": false,
          "help": "Require that remote dependencies are already cached",
          "help_heading": "Dependency management options",
          "usage": "--cached-only"
        },
        {
          "name": "location",
          "short": null,
          "long": "location",
          "required": false,
          "help": "Value of \u001b[38;5;245mglobalThis.location\u001b[39m used by some web APIs",
          "help_heading": null,
          "usage": "--location <HREF>"
        },
        {
          "name": "v8-flags",
          "short": null,
          "long": "v8-flags",
          "required": false,
          "help": "To see a list of all available flags use --v8-flags=--help\n  \u001b[38;5;245mFlags can also be set via the DENO_V8_FLAGS environment variable.\n  Any flags set with this flag are appended after the DENO_V8_FLAGS environment variable\u001b[39m",
          "help_heading": null,
          "usage": "--v8-flags[=<V8_FLAGS>...]"
        },
        {
          "name": "seed",
          "short": null,
          "long": "seed",
          "required": false,
          "help": "Set the random number generator seed",
          "help_heading": null,
          "usage": "--seed <NUMBER>"
        },
        {
          "name": "check",
          "short": null,
          "long": "check",
          "required": false,
          "help": "Set type-checking behavior. This subcommand type-checks local modules by default, so adding --check is redundant\n  \u001b[38;5;245mIf the value of \"all\" is supplied, remote modules will be included.\n  Alternatively, the 'deno check' subcommand can be used\u001b[39m",
          "help_heading": "Type checking options",
          "usage": "--check[=<CHECK_TYPE>]"
        },
        {
          "name": "ignore",
          "short": null,
          "long": "ignore",
          "required": false,
          "help": "Ignore files",
          "help_heading": null,
          "usage": "--ignore=<ignore>..."
        },
        {
          "name": "no-run",
          "short": null,
          "long": "no-run",
          "required": false,
          "help": "Cache test modules, but don't run tests",
          "help_heading": "Testing options",
          "usage": "--no-run"
        },
        {
          "name": "trace-leaks",
          "short": null,
          "long": "trace-leaks",
          "required": false,
          "help": "Enable tracing of leaks. Useful when debugging leaking ops in test, but impacts test execution time",
          "help_heading": "Testing options",
          "usage": "--trace-leaks"
        },
        {
          "name": "doc",
          "short": null,
          "long": "doc",
          "required": false,
          "help": "Evaluate code blocks in JSDoc and Markdown",
          "help_heading": "Testing options",
          "usage": "--doc"
        },
        {
          "name": "fail-fast",
          "short": null,
          "long": "fail-fast",
          "required": false,
          "help": "Stop after N errors. Defaults to stopping after first failure",
          "help_heading": "Testing options",
          "usage": "--fail-fast[=<N>]"
        },
        {
          "name": "permit-no-files",
          "short": null,
          "long": "permit-no-files",
          "required": false,
          "help": "Don't return an error code if no test files were found",
          "help_heading": "Testing options",
          "usage": "--permit-no-files"
        },
        {
          "name": "filter",
          "short": null,
          "long": "filter",
          "required": false,
          "help": "Run tests with this string or regexp pattern in the test name",
          "help_heading": "Testing options",
          "usage": "--filter <filter>"
        },
        {
          "name": "shuffle",
          "short": null,
          "long": "shuffle",
          "required": false,
          "help": "Shuffle the order in which the tests are run",
          "help_heading": "Testing options",
          "usage": "--shuffle[=<NUMBER>]"
        },
        {
          "name": "coverage",
          "short": null,
          "long": "coverage",
          "required": false,
          "help": "Collect coverage profile data into DIR. If DIR is not specified, it uses 'coverage/'",
          "help_heading": "Testing options",
          "usage": "--coverage[=<DIR>]"
        },
        {
          "name": "clean",
          "short": null,
          "long": "clean",
          "required": false,
          "help": "Empty the temporary coverage profile data directory before running tests.\n  \u001b[38;5;245mNote: running multiple `deno test --clean` calls in series or parallel for the same coverage directory may cause race conditions.\u001b[39m",
          "help_heading": "Testing options",
          "usage": "--clean"
        },
        {
          "name": "parallel",
          "short": null,
          "long": "parallel",
          "required": false,
          "help": "Run test modules in parallel. Parallelism defaults to the number of available CPUs or the value of the DENO_JOBS environment variable",
          "help_heading": null,
          "usage": "--parallel"
        },
        {
          "name": "files",
          "short": null,
          "long": null,
          "required": false,
          "help": "List of file names to run",
          "help_heading": null,
          "usage": "[files]..."
        },
        {
          "name": "watch",
          "short": null,
          "long": "watch",
          "required": false,
          "help": "Watch for file changes and restart process automatically.\n  \u001b[38;5;245mLocal files from entry point module graph are watched by default.\n  Additional paths might be watched by passing them as arguments to this flag.\u001b[39m",
          "help_heading": "File watching options",
          "usage": "--watch[=<FILES>...]"
        },
        {
          "name": "watch-exclude",
          "short": null,
          "long": "watch-exclude",
          "required": false,
          "help": "Exclude provided files/patterns from watch mode",
          "help_heading": "File watching options",
          "usage": "--watch-exclude[=<FILES>...]"
        },
        {
          "name": "no-clear-screen",
          "short": null,
          "long": "no-clear-screen",
          "required": false,
          "help": "Do not clear terminal screen when under watch mode",
          "help_heading": "File watching options",
          "usage": "--no-clear-screen"
        },
        {
          "name": "script_arg",
          "short": null,
          "long": null,
          "required": false,
          "help": "Script arg",
          "help_heading": null,
          "usage": "[SCRIPT_ARG]..."
        },
        {
          "name": "junit-path",
          "short": null,
          "long": "junit-path",
          "required": false,
          "help": "Write a JUnit XML test report to PATH. Use '-' to write to stdout which is the default when PATH is not provided",
          "help_heading": "Testing options",
          "usage": "--junit-path <PATH>"
        },
        {
          "name": "reporter",
          "short": null,
          "long": "reporter",
          "required": false,
          "help": "Select reporter to use. Default to 'pretty'",
          "help_heading": "Testing options",
          "usage": "--reporter <reporter>"
        },
        {
          "name": "hide-stacktraces",
          "short": null,
          "long": "hide-stacktraces",
          "required": false,
          "help": "Hide stack traces for errors in failure test results.",
          "help_heading": null,
          "usage": "--hide-stacktraces"
        },
        {
          "name": "env-file",
          "short": null,
          "long": "env-file",
          "required": false,
          "help": "Load environment variables from local file\n  \u001b[38;5;245mOnly the first environment variable with a given key is used.\n  Existing process environment variables are not overwritten.\u001b[39m",
          "help_heading": null,
          "usage": "--env-file[=<FILE>]"
        },
        {
          "name": "ext",
          "short": null,
          "long": "ext",
          "required": false,
          "help": "Set content type of the supplied file",
          "help_heading": null,
          "usage": "--ext <ext>"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno test\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[files]...\u001b[0m \u001b[32m[--\u001b[0m \u001b[32m[SCRIPT_ARG]...\u001b[0m\u001b[32m]\u001b[0m"
    },
    {
      "name": "types",
      "about": "Print runtime TypeScript declarations.\n\n  \u001b[38;5;245mdeno types > lib.deno.d.ts\u001b[39m\n\nThe declaration file could be saved and used for typing information.",
      "args": [],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno types\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "upgrade",
      "about": "Upgrade deno executable to the given version.\n\n\u001b[32mLatest\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m\n\n\u001b[32mSpecific version\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m \u001b[38;5;245m1.45.0\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m \u001b[38;5;245m1.46.0-rc.1\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m \u001b[38;5;245m9bc2dd29ad6ba334fd57a20114e367d3c04763d4\u001b[39m\n\n\u001b[32mChannel\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m \u001b[38;5;245mstable\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m \u001b[38;5;245mrc\u001b[39m\n  \u001b[1mdeno upgrade\u001b[22m \u001b[38;5;245mcanary\u001b[39m\n\nThe version is downloaded from \u001b[38;5;245mhttps://dl.deno.land\u001b[39m and is used to replace the current executable.\n\nIf you want to not replace the current Deno executable but instead download an update to a\ndifferent location, use the \u001b[36m--output\u001b[39m flag:\n  \u001b[38;5;245mdeno upgrade --output $HOME/my_deno\u001b[39m\n\n\u001b[33mRead more:\u001b[39m \u001b[36mhttps://docs.deno.com/go/upgrade\u001b[39m",
      "args": [
        {
          "name": "output",
          "short": null,
          "long": "output",
          "required": false,
          "help": "The path to output the updated version to",
          "help_heading": "Upgrade options",
          "usage": "--output <output>"
        },
        {
          "name": "dry-run",
          "short": null,
          "long": "dry-run",
          "required": false,
          "help": "Perform all checks without replacing old exe",
          "help_heading": "Upgrade options",
          "usage": "--dry-run"
        },
        {
          "name": "force",
          "short": "f",
          "long": "force",
          "required": false,
          "help": "Replace current exe even if not out-of-date",
          "help_heading": "Upgrade options",
          "usage": "--force"
        },
        {
          "name": "version-or-hash-or-channel",
          "short": null,
          "long": null,
          "required": false,
          "help": "Version \u001b[38;5;245m(v1.46.0)\u001b[39m, channel \u001b[38;5;245m(rc, canary)\u001b[39m or commit hash \u001b[38;5;245m(9bc2dd29ad6ba334fd57a20114e367d3c04763d4)\u001b[39m",
          "help_heading": null,
          "usage": "[VERSION]..."
        },
        {
          "name": "cert",
          "short": null,
          "long": "cert",
          "required": false,
          "help": "Load certificate authority from PEM encoded file",
          "help_heading": null,
          "usage": "--cert <FILE>"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno upgrade\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[VERSION]...\u001b[0m"
    },
    {
      "name": "vendor",
      "about": "⚠️ `deno vendor` was removed in Deno 2.\n\nSee the Deno 1.x to 2.x Migration Guide for migration instructions: https://docs.deno.com/runtime/manual/advanced/migrate_deprecations",
      "args": [
        {
          "name": "unstable-bare-node-builtins",
          "short": null,
          "long": "unstable-bare-node-builtins",
          "required": false,
          "help": "Enable unstable bare node builtins feature",
          "help_heading": "Unstable options",
          "usage": "--unstable-bare-node-builtins"
        },
        {
          "name": "unstable-detect-cjs",
          "short": null,
          "long": "unstable-detect-cjs",
          "required": false,
          "help": "Reads the package.json type field in a project to treat .js files as .cjs",
          "help_heading": "Unstable options",
          "usage": "--unstable-detect-cjs"
        },
        {
          "name": "unstable-sloppy-imports",
          "short": null,
          "long": "unstable-sloppy-imports",
          "required": false,
          "help": "Enable unstable resolving of specifiers by extension probing, .js to .ts, and directory probing",
          "help_heading": "Unstable options",
          "usage": "--unstable-sloppy-imports"
        },
        {
          "name": "unstable",
          "short": null,
          "long": "unstable",
          "required": false,
          "help": "Enable all unstable features and APIs. Instead of using this flag, consider enabling individual unstable features",
          "help_heading": "Unstable options",
          "usage": "--unstable"
        }
      ],
      "subcommands": [],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno vendor\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
    },
    {
      "name": "help",
      "about": null,
      "args": [],
      "subcommands": [
        {
          "name": "run",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help run\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "serve",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help serve\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "add",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help add\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "remove",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help remove\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "bench",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help bench\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "bundle",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help bundle\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "cache",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help cache\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "check",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help check\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "clean",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help clean\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "compile",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help compile\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "completions",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help completions\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "coverage",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help coverage\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "doc",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help doc\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "eval",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help eval\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "fmt",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help fmt\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "init",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help init\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "info",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help info\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "install",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help install\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "json_reference",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help json_reference\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "jupyter",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help jupyter\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "uninstall",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help uninstall\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "lsp",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help lsp\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "lint",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help lint\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "publish",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help publish\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "repl",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help repl\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "task",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help task\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "test",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help test\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "types",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help types\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "upgrade",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help upgrade\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        },
        {
          "name": "vendor",
          "about": null,
          "args": [],
          "subcommands": [],
          "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help vendor\u001b[0m \u001b[32m[OPTIONS]\u001b[0m"
        }
      ],
      "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno help\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[COMMAND]\u001b[0m"
    }
  ],
  "usage": "\u001b[37mUsage:\u001b[0m \u001b[32mdeno\u001b[0m \u001b[32m[OPTIONS]\u001b[0m \u001b[32m[COMMAND]\u001b[0m"
}
