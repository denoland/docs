{
  "Cache": "Tools for caching and managing data. Store and retrieve data from the cache, manage cache storage limits, and handle cache-related events.\n\nEg {@linkcode caches}",
  "Canvas": "Create, transform, and display images and graphics within the HTML element.\n\nEg {@linkcode createImageBitmap}",
  "Crypto": "Cryptographic functionality for secure communication, data protection, and key management. Generate secure random numbers, encrypt and decrypt data, and manage cryptographic keys.\n\nEg {@linkcode crypto}",
  "Encoding": "Handle character encoding, decoding, and binary data conversion.\n\nEg {@linkcode TextDecoder}, {@linkcode TextEncoder}",
  "Events": "Handle events and interactions. Listen for and respond to various events, including custom events, errors, progress, and promise rejections.\n\nEg {@linkcode addEventListener}",
  "Fetch": "HTTP client for fetching data across a network. Retrieve resources from servers, handle responses, and manage network requests.\n\nEg {@linkcode fetch}, {@linkcode Response}, {@linkcode Request}, {@linkcode Headers}",
  "File": "File and data manipulation tools. Handle files, read data and work with binary content.\n\nEg {@linkcode File}, {@linkcode Blob}",
  "GPU": "GPU programming and rendering. Efficiently use a deviceâ€™s graphics processing unit (GPU) for high-performance computations and complex image rendering.\n\nEg {@linkcode GPUDevice}",
  "I/O": "Interfaces for reading, writing, seeking, and managing resources. For handling of data streams, file I/O, and console interactions. \n\nEg {@linkcode stdin}, {@linkcode inspect}",
  "Intl": "Tools for internationalization and localization. Create language-aware applications, handle date and time formatting, and adapt content for different locales. \n\nEg {@linkcode Intl}",
  "Messaging": "Facilitate communication between different parts of an application, allowing data exchange and coordination.\n\nEg {@linkcode BroadcastChannel}, {@linkcode MessageChannel}",
  "Performance": "Measure, analyze, and optimize application performance. \n\nEg {@linkcode performance}",
  "Platform": "A set of essential interfaces and functions to interact with the browser environment. Eg handling user interactions, getting browser and device information, scheduling and canceling periodic or one-time tasks.\n\n{@linkcode prompt}, {@linkcode console}",
  "Storage": "Store data locally within the browser. Manage session storage and local storage.\n\n{@linkcode sessionStorage}, {@linkcode localStorage}",
  "Streams": "Manage data streams, queuing strategies, and transformations. Handle data in chunks, process large datasets, and optimize memory usage.\n\nEg {@linkcode ReadableStream}, {@linkcode WritableStream}, {@linkcode TransformStream}",
  "Temporal": "Date and time handling. Includes long-lived Workflows, calendar systems, time zones, and precise duration calculations.\n\nEg {@linkcode Temporal.Now}, {@linkcode Temporal.PlainDate}",
  "URL": "Manipulate URLs, extract data from URLs and manage query parameters.\n\nEg {@linkcode URL}",
  "Wasm": "Efficiently execute computationally intensive tasks. Wasm module compilation, instantiation, memory management, and interaction with imports and exports.\n\nEg {@linkcode WebAssembly.instantiate}, {@linkcode WebAssembly.Module}, {@linkcode WebAssembly.Instance}",
  "WebSockets": "Enable real-time communication between clients and servers using WebSockets. Tools to create interactive and dynamic applications.\n\nEg {@linkcode WebSocket}",
  "Workers": "Run script operations in background threads. Manage worker threads, communicate with workers, and handle data transfer between workers and the main thread.\n\nEg {@linkcode Worker}"
}
